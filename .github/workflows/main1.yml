name: Ejecutar Script de Reportes en VM Windows

on:
  workflow_dispatch: # Permite ejecutarlo manualmente

jobs:
  run-python-script:
    # Asegúrate de que el job se ejecute en tu runner con las etiquetas correctas
    runs-on: [self-hosted, windows, gui]

    steps:
      # 1. Clona el repositorio en la VM
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python de forma robusta
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          # Especifica la versión de Python que necesitas
          python-version: '3.10'

      # 3. Instala las dependencias del script desde requirements.txt
      - name: Instalar dependencias de Python
        run: |
          python -m pip install --upgrade pip
          pip install -r "${{ github.workspace }}/DMV Automation - 10 Jun V2/requirements.txt"
        shell: powershell

      # 4. Ejecuta el script y captura logs
      - name: Ejecutar One_new.py
        id: run_script
        run: |
          # Solución 1: Forzar codificación UTF-8 en PowerShell
          $OutputEncoding = [System.Text.Encoding]::UTF8

          $logDir = "C:\Temp\RunnerLogs"
          New-Item -ItemType Directory -Force -Path $logDir
          $logFile = Join-Path $logDir "one_new_$(Get-Date -Format 'yyyyMMdd_HHmmss').log"
    
          Write-Output "[INFO] Iniciando el script de Python..."
          Write-Output "[INFO] El log se guardara en: $logFile"

          # Ejecuta el script. El `Traceback` se guardará en $logFile
          python -u "One_new.py" 2>&1 | Tee-Object -FilePath $logFile
    
          # Comprueba si el script falló
          if ($LASTEXITCODE -ne 0) {
            Write-Error "[ERROR] El script de Python fallo con codigo $LASTEXITCODE."
      
            # Solución 2: Muestra el contenido completo del log para ver el Traceback
            Write-Output "--- CONTENIDO DEL LOG DE ERRORES ---"
            Get-Content $logFile
            Write-Output "------------------------------------"
      
            # Falla el paso del workflow
            exit 1
          }

          Write-Output "[SUCCESS] Script finalizado con exito."
        shell: powershell
        working-directory: "${{ github.workspace }}/DMV Automation - 10 Jun V2"
        # Solución 1 (parte de Python): Establece la variable de entorno
