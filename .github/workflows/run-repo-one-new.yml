name: Run One_new.py (diagnóstico)

on:
  workflow_dispatch:
    inputs:
      wait_seconds:
        description: "Esperar X seg tras ejecutar (0 = no)"
        required: false
        default: "0"

defaults:
  run:
    shell: powershell   # Windows PowerShell 5.1 en tu VM

jobs:
  run-on-vm:
    runs-on: [self-hosted, windows, gui]
    timeout-minutes: 60

    steps:
      - name: Checkout repo (con LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: (Opcional) Instalar dependencias si hay requirements.txt
        run: |
          $req = Join-Path $env:GITHUB_WORKSPACE 'requirements.txt'
          if (Test-Path $req) {
            Write-Host "Instalando dependencias de $req"
            $pipPy = @(
              "C:\Python312\python.exe",
              "C:\Python311\python.exe",
              "C:\Program Files\Python312\python.exe",
              "C:\Program Files\Python311\python.exe",
              "$env:LOCALAPPDATA\Programs\Python\Python312\python.exe",
              "$env:LOCALAPPDATA\Programs\Python\Python311\python.exe"
            ) | Where-Object { Test-Path $_ } | Select-Object -First 1
            if (-not $pipPy) { Write-Error "No se encontró python.exe para pip"; exit 1 }
            & $pipPy -m pip install -r $req
          } else {
            Write-Host "No hay requirements.txt; continúo…"
          }

      - name: Resolver Python (forzar python.exe)
        run: |
          $candidatos = @(
            "C:\Python312\python.exe",
            "C:\Python311\python.exe",
            "C:\Program Files\Python312\python.exe",
            "C:\Program Files\Python311\python.exe",
            "$env:LOCALAPPDATA\Programs\Python\Python312\python.exe",
            "$env:LOCALAPPDATA\Programs\Python\Python311\python.exe"
          )
          $py = $candidatos | Where-Object { Test-Path $_ } | Select-Object -First 1
          if (-not $py) { Write-Error "No se encontró python.exe en rutas conocidas"; exit 1 }
          & $py -V
          "PY_PATH=$py" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Ejecutar One_new.py (bloqueante; traza y logs)
        run: |
          $logDir = "C:\Temp\RunnerLogs"
          New-Item -ItemType Directory -Force -Path $logDir | Out-Null

          $rel    = "DMV Automation - 10 Jun V2/One_new.py"
          $script = Join-Path $env:GITHUB_WORKSPACE $rel
          Write-Host "WORKSPACE: $env:GITHUB_WORKSPACE"
          Write-Host "SCRIPT REL: $rel"
          Write-Host "SCRIPT ABS: $script"

          if (-not (Test-Path $script)) { Write-Error "No existe: $script"; exit 1 }

          $workdir = Split-Path $script
          Set-Location $workdir
          Write-Host "PWD: $(Get-Location)"

          $log = Join-Path $logDir "one_new.log"

          # Ejecuta y duplica stdout/err a consola y archivo (unbuffered)
          & $env:PY_PATH -u "$script" 2_
